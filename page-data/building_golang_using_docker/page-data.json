{"componentChunkName":"component---src-templates-blog-post-js","path":"/building_golang_using_docker/","result":{"data":{"site":{"siteMetadata":{"title":"김병훈 블로그"}},"markdownRemark":{"id":"58521d41-a38f-59cc-9236-57da72bc4a1a","excerpt":"새로운 Golang 버전이 나오면 내 프로젝트가 잘 빌드 되는지 확인해 보고 싶을 때가 있다.\n또 다른 버전에서 프로젝트가 잘 빌드 되는지 확인해 보고 싶을 때도 있다. 여러 Golang 버전을 관리하는 방법은 gvm…","html":"<p>새로운 Golang 버전이 나오면 내 프로젝트가 잘 빌드 되는지 확인해 보고 싶을 때가 있다.\n또 다른 버전에서 프로젝트가 잘 빌드 되는지 확인해 보고 싶을 때도 있다.</p>\n<p>여러 Golang 버전을 관리하는 방법은 <a href=\"https://github.com/moovweb/gvm\">gvm</a> 도 있지만 여러가지 설정도 해야 하고 필요한 버전들을 설치해야 해서 조금 불편할 수도 있다.</p>\n<p>Docker를 이용하면 간단히 프로젝트를 빌드해 볼 수 있다. 그 방법을 간단히 알아 보자.</p>\n<h2>샘플 프로젝트</h2>\n<p>빌드할 프로젝트 hello라는 프로젝트를 만들고 main.go 파일을 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">hello\n├── compile.sh\n└── main.go</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>빌드 하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">GOLANG_VERSION</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.13.1\"</span>\n\n<span class=\"token assign-left variable\">GOX_INST_CMD</span><span class=\"token operator\">=</span><span class=\"token string\">\"go get github.com/mitchellh/gox\"</span>\n<span class=\"token assign-left variable\">GOX_BUILD_CMD</span><span class=\"token operator\">=</span><span class=\"token string\">\"gox -output=build/{{.OS}}/{{.Arch}}/{{.Dir}}\"</span>\n\n<span class=\"token assign-left variable\">PROJECT_DIR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>\"</span><span class=\"token variable\">`</span></span>\n\n<span class=\"token function\">docker</span> run -it --rm <span class=\"token punctuation\">\\</span>\n\t-v <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>:/<span class=\"token variable\">$PROJECT_DIR</span> <span class=\"token punctuation\">\\</span>\n\tgolang:<span class=\"token variable\">$GOLANG_VERSION</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">bash</span> -c <span class=\"token string\">\"cd /<span class=\"token variable\">$PROJECT_DIR</span> &amp;&amp; <span class=\"token variable\">$GOX_INST_CMD</span> &amp;&amp; <span class=\"token variable\">$GOX_BUILD_CMD</span> &amp;&amp; exit\"</span></code></pre></div>\n<p>위 샘플 compile.sh 스크립트는 golang 1.13.1 버전에서 빌드한다.\n여러 플랫폼용으로 잘 빌드 되는지 확인하기 위해 <a href=\"https://github.com/mitchellh/gox\">gox</a>를 사용해 빌드한다.\n빌드된 바이너리는 host 에 남기기 위해 docker run 명령에 volume 파라미터로 프로젝트 폴더를 연결한다.</p>\n<h2>빌드 결과</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">file</span> ./build/**/hello\n./build/darwin/386/hello:     Mach-O i386 executable\n./build/darwin/amd64/hello:   Mach-O <span class=\"token number\">64</span>-bit x86_64 executable\n./build/freebsd/386/hello:    ELF <span class=\"token number\">32</span>-bit LSB executable, Intel <span class=\"token number\">80386</span>, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>FreeBSD<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/freebsd/amd64/hello:  ELF <span class=\"token number\">64</span>-bit LSB executable, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>FreeBSD<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/freebsd/arm/hello:    ELF <span class=\"token number\">32</span>-bit LSB executable, ARM, EABI5 version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>FreeBSD<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/386/hello:      ELF <span class=\"token number\">32</span>-bit LSB executable, Intel <span class=\"token number\">80386</span>, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/amd64/hello:    ELF <span class=\"token number\">64</span>-bit LSB executable, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/arm/hello:      ELF <span class=\"token number\">32</span>-bit LSB executable, ARM, EABI5 version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/mips/hello:     ELF <span class=\"token number\">32</span>-bit MSB executable, MIPS, MIPS32 version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/mips64/hello:   ELF <span class=\"token number\">64</span>-bit MSB executable, MIPS, MIPS-III version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/mips64le/hello: ELF <span class=\"token number\">64</span>-bit LSB executable, MIPS, MIPS-III version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/mipsle/hello:   ELF <span class=\"token number\">32</span>-bit LSB executable, MIPS, MIPS32 version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/linux/s390x/hello:    ELF <span class=\"token number\">64</span>-bit MSB executable, IBM S/390, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, statically linked, not stripped\n./build/netbsd/386/hello:     ELF <span class=\"token number\">32</span>-bit LSB executable, Intel <span class=\"token number\">80386</span>, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>NetBSD<span class=\"token punctuation\">)</span>, statically linked, <span class=\"token keyword\">for</span> NetBSD <span class=\"token number\">5.99</span>, not stripped\n./build/netbsd/amd64/hello:   ELF <span class=\"token number\">64</span>-bit LSB executable, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>NetBSD<span class=\"token punctuation\">)</span>, statically linked, <span class=\"token keyword\">for</span> NetBSD <span class=\"token number\">5.99</span>, not stripped\n./build/netbsd/arm/hello:     ELF <span class=\"token number\">32</span>-bit LSB executable, ARM, EABI5 version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>NetBSD<span class=\"token punctuation\">)</span>, statically linked, <span class=\"token keyword\">for</span> NetBSD <span class=\"token number\">5.99</span>, not stripped\n./build/openbsd/386/hello:    ELF <span class=\"token number\">32</span>-bit LSB executable, Intel <span class=\"token number\">80386</span>, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>OpenBSD<span class=\"token punctuation\">)</span>, statically linked, <span class=\"token keyword\">for</span> OpenBSD, not stripped\n./build/openbsd/amd64/hello:  ELF <span class=\"token number\">64</span>-bit LSB executable, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>OpenBSD<span class=\"token punctuation\">)</span>, statically linked, <span class=\"token keyword\">for</span> OpenBSD, not stripped\n</code></pre></div>\n<p>Docker 이미지를 이용하면 비교적 시스템에 영향을 미치지 않고 여러 버전의 golang 에서 기존 프로젝트의 빌드를 테스트 해 볼 수 있다.</p>","frontmatter":{"title":"Docker로 Golang 프로젝트 빌드 하기","date":"2019-10-25","description":null}},"previous":null,"next":{"fields":{"slug":"/vim-kor-eng-auto-switch/"},"frontmatter":{"title":"Vim 입력모드 노말모드 전환시 한/영 자동 전환하기"}}},"pageContext":{"id":"58521d41-a38f-59cc-9236-57da72bc4a1a","previousPostId":null,"nextPostId":"7faba8a2-acdb-5e15-beeb-ff504ff5897e"}},"staticQueryHashes":["2841359383","3274528899"]}